---
title: "Data breach Dashboard"
format: dashboard
editor_options: 
  chunk_output_type: console
execute:
  echo: false
---

```{r setup}
#| label: load-packages
#| message: false
options(repos = "https://cran.r-project.org/")  # Set CRAN mirror

# Load necessary libraries
library(dplyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
# Load the required library
library(knitr)
# Load the required library
library(knitr)
library(DT)



theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))


# Load the data
data <- read.csv("data/Data_Breaches_LATEST.csv")


# Rename the column with extra spaces
names(data)[names(data) == 'year   '] <- 'year'



# Clean column names using janitor::clean_names()
data <- janitor::clean_names(data)

# Aggregate sector categories
data$sector <- ifelse(data$sector %in% c("academic", "finance", "government", "health", "military", "tech","web"), data$sector, "other")


# Aggregate method categories
data$method <- ifelse(data$method %in% c("hacked", "inside job", "lost device", "poor security"), data$method, "other")
```

# {.sidebar}

This dashboard displays statistics for:

|               |                        |
|---------------|------------------------|
| **Project**   | Data Breach Analysis   |
| **Team**      | Datavista              |
| **Month**     | May 2024               |

------------------------------------------------------------------------

In [2018-2023], the breach breakdown by method was as follows:

|                      |          |
|----------------------|----------|
| **Hacked**           |   350    |
| **Poor Security**    |   200    |
| **Inside Job**       |   150    |
| **Lost Device**      |   100    |

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Reference

For more information on creating dashboards with Quarto, you can visit the [Quarto documentation](https://quarto.org/docs/dashboards/).
:::

# TIME ANALYSIS

```{r}
#| label: all-values
#| results: hide
#value box 1

# Convert the 'year' column to numeric
data$year <- as.numeric(data$year)

# Filter data for the last 10 years
data_last_10_years <- data[data$year >= (max(data$year) - 9), ]

# Calculate total breaches for the last 10 years by method
total_breaches_last_10_years <- table(data_last_10_years$method)

# Calculate total breaches
total_breaches <- sum(total_breaches_last_10_years)

total_breaches







# value box 2,3


# Filter data for 2018 and 2023
data_2018 <- data[data$year == 2018, ]
data_2023 <- data[data$year == 2023, ]

# Calculate total breaches for each method in 2018
total_breaches_2018 <- table(data_2018$method)

#sum 2018
total_breaches_2018 <- sum(total_breaches_2018)



# Calculate total breaches for each method in 2023
total_breaches_2023 <- table(data_2023$method)

#sum 2023
total_breaches_2023 <- sum(total_breaches_2023)


names(data)[names(data) == 'year   '] <- 'year'

# Filter data for the past decade (2013-2023)
df_decade <- data[data$year >= 2013 & data$year <= 2023, ]

# Clean column names using janitor::clean_names()
df_decade <- janitor::clean_names(df_decade)

# Calculate the total records lost in 2023
total_record_lost_2023 <- df_decade %>%
  filter(year == 2023) %>%
  summarise(total_records_lost = sum(records_lost, na.rm = TRUE))


```




## Row {height="20%"}
```{r}
#| content: valuebox
#| title: "Total Breaches(last 10 years)"

list(
  icon = "shield",
  color = "primary",
  value = total_breaches

)


```



```{r}
#| content: valuebox
#| title: "Total breach in 2023"

list(
  icon = "shield",
  color = "primary",
  value = total_breaches_2023

)

```


```{r}

#| content: valuebox
#| title: "Total data lost  in 2023"


# Create a value box with the total records lost in 2023
list(
  icon = "shield",
  color = "primary",
  value =  total_record_lost_2023

)



```






## Row {height="40%"}

### Column {width="55%"}

```{r}
#| title: Total breach over year

knitr::include_graphics("images/total_plot.gif")


```


### Column {width="45%"}  {.tabset}
 
```{r}
#| title: Breaches Over Time by Sector

knitr::include_graphics("images/sector_group_plot.gif")


```



```{r}
#| title: Breaches by method
# Load necessary libraries
# Load necessary libraries
library(dplyr)
library(plotly)

# Clean 'health ' to 'health'
data$sector <- gsub("health ", "health", data$sector)

# Function to categorize methods
categorize_method <- function(method) {
  if (method %in% c("hacked", "inside job", "lost device", "poor security")) {
    return(method)
  } else {
    return("other")
  }
}

# Apply categorize_method function to create a new column 'method_group'
data$method_group <- sapply(data$method, categorize_method)

# Aggregate total breaches by method group and year
total_by_method_group <- data %>%
  group_by(year, method_group) %>%
  summarise(total_breaches = n(), .groups = "drop")  # Drop grouping after summarizing

# Ensure there are sufficient data points for time series visualization
total_by_method_group <- total_by_method_group %>%
  arrange(year, method_group)

# Plot breaches by method group
method_group_plot <- plot_ly(total_by_method_group, x = ~year, y = ~total_breaches, color = ~method_group, type = "scatter", mode = "lines+markers",
                             text = ~paste("Year: ", year, "<br>Total Breaches: ", total_breaches, "<br>Method: ", method_group)) %>%
  layout(title = "Breaches Over Time by Method",
         xaxis = list(title = "Year"),
         yaxis = list(title = "Total Breaches"))

# Display the plot
method_group_plot

```




# PATTERN ANALYSIS {orientation="columns"}

```{r}



# Group data by sector and method, and calculate frequency
pattern <- data %>%
  group_by(sector, method) %>%
  summarise(count = n()) %>%
  arrange(desc(count))

# Plot interactive patterns of breach methods by sector
plot <- pattern %>%
  plot_ly(x = ~reorder(sector, count), y = ~count, color = ~method, type = 'bar') %>%
  layout(title = "Patterns of Breach Methods by Sector",
         xaxis = list(title = "Sector"),
         yaxis = list(title = "Number of Breaches"),
         barmode = 'stack')

plot

```




```{r}

knitr::include_graphics("images/ballon_plot.gif")

```




# DATA BREACH STORY {height="100"}

```{r,message=FALSE}


df <- read.csv("data/Data_Breaches_LATEST.csv")

# Arrange the data by descending records_lost and select the top 10
top_records_lost <- data_last_10_years %>%
  arrange(desc(records_lost)) %>%
  head(10) %>%
  select(organisation, year, story, records_lost)

# Create a DT DataTable with interactivity
datatable(top_records_lost, 
          options = list(
            dom = 't',
            paging = FALSE,
            searching = FALSE,
            ordering = FALSE,
            info = FALSE,
            columnDefs = list(list(className = 'dt-center', targets = '_all'))
          )) %>%
  formatStyle(
    names(top_records_lost),
    background = styleInterval(c(0, max(top_records_lost$records_lost)), c("lightblue", "lightgreen", "yellow"))
  )

```




