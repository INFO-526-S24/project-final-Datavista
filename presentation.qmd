---
title: "Unveiling Trends in Data Breaches and Data Hacks"
subtitle: "INFO 526 - Project Final"
author: "**Datavista**: <br> Akash Srinivasan, Abhishek Kumar, Divya Dhole, Noureen Mithaigar, Gowtham Theeda, Lakshmi Neharika Anchula" 
title-slide-attributes:
  data-background-image: images/dataGettyImages.jpeg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme: league
    transition: slide
    background-transition: fade
    header-includes: |
      <style>
        /* any custom styles go here */
      </style>
---


```{css}
    .plot-container {
      width: 800px; /* Adjust width as needed */
      height: 600px; /* Adjust height as needed */
    }
    ```

---

```{r, GETTING THE LIBRARIES}
if (!require(pacman))
  install.packages(pacman)


pacman::p_load(tidyverse,
               dplyr,
               janitor,
               here,
               plotly,
               gganimate,
               scales,
               gifski,
               ggimage,
               ggtext,magick,
               animation)

pacman::p_load_gh("BlakeRMills/MoMAColors")
  message = FALSE


```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

## Introduction {.smaller}

::: incremental
-   Introduction to Data Breaches Definition: A data breach refers to the unauthorized access, disclosure, or acquisition of sensitive or confidential information. It occurs when cybercriminals gain access to a system or network and extract valuable data without authorization.

-   Impact: Data breaches lead to financial losses, reputational damage, legal issues, and privacy breaches for individuals, businesses, and organizations. They also erode trust among stakeholders, leading to long-term consequences.
:::

## Data set

::: incremental
-   Data_Breaches_LATEST.CSV The "World's Biggest Data Breaches & Hacks" dataset from informationisbeautiful.net spans from 2003 to 2023, providing key details such as year, date, sector, method, and data sensitivity for analyzing breach trends and impacts across sectors.
-   Examples of key variables in this data set are: -Organisation -Records Lost. -Year -Date -Sector -Method -Data Sensitivity
:::

## Project Approach

::: incremental
-   Data Collection: Obtain "World's Biggest Data Breaches & Hacks" dataset from informationisbeautiful.net (2003-2023) with variables: organization, records lost, year, date, sector, method, and data sensitivity.

-   Data Cleaning: Ensure integrity by handling missing values, standardizing formats, and removing duplicates.

-   Exploratory Data Analysis (EDA): Uncover breach patterns and trends using statistical methods and visualizations.

-   Model Development: Create ML models (classification/regression) to predict breaches or assess severity with key data features.

:::

## Question 1

::: incremental
Visualizing Information Breaches: A Multifaceted Approach (2013-2023)

-   Utilizing diverse visualizations: Employing 3D scatter plots, time series analysis, and animations.

-   3D Scatter Plot: Detailed visualization using Plotly.

-   Time Series Analysis: Utilizing ggplot2 for temporal trends.
:::

## Information Breaches Over the Past Decade (3D visulazation)

```{r fig.width = 4, fig.asp = 0.5 }

suppressWarnings({
# Load required libraries
library(plotly)
library(janitor)
library(magrittr)  # Load magrittr for pipe operator

# Load the CSV data
data <- read.csv("data/Data_Breaches_LATEST.csv")

# Rename the column with extra spaces
names(data)[names(data) == 'year   '] <- 'year'

# Filter data for the past decade (2013-2023)
df_decade <- data[data$year >= 2013 & data$year <= 2023, ]

# Clean column names using janitor::clean_names()
df_decade <- janitor::clean_names(df_decade)

# Aggregate data by year, sector, and method
agg_data <- aggregate(records_lost ~ year + sector + method, data = df_decade, FUN = sum)

# Create a 3D plot
plot_ly(agg_data, x = ~year, y = ~sector, z = ~records_lost, color = ~method,
        type = "scatter3d", mode = "markers", sizes = 10) %>%
  layout(title = "Information Breaches Over the Past Decade",
         scene = list(xaxis = list(title = "Year"),
                      yaxis = list(title = "Sector"),
                      zaxis = list(title = "Records Lost")))


})

```

## Total Breaches Over Time plot



## Question 2

::: incremental

-  Vulnerability Assessment

```{r fig.width = 16, fig.asp = 0.618}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~sector, 
               y = ~records_lost,
               type = 'bar',
               name = ~method,
               hoverinfo = 'text',
               text = ~paste('Method:',
                             method,
                             '<br>Records Lost:',
                             records_lost)) %>%
  layout(
    barmode = 'stack',
    title = 'Breach Methods by Sector/Type of Data',
    xaxis = list(title = 'Sector/Type'),
    yaxis = list(title = 'Records Lost'),
    margin = list(b = 150),
    showlegend = TRUE
  ) %>%
  config(displayModeBar = TRUE)

fig <- fig %>% layout(
  barmode = 'stack',
  paper_bgcolor = 'rgba(245, 246, 249, 1)', 
  plot_bgcolor = 'rgba(245, 246, 249, 1)',
  yaxis = list(
    automargin = TRUE,
    tickfont = list(size = 10),
    titlefont = list(size = 15)
  ),
  xaxis = list(
    automargin = TRUE,
    tickangle = -45, 
    tickfont = list(size = 10),
    titlefont = list(size = 15)
  )
)

fig <- fig %>% layout(
  xaxis = list(
    rangeslider = list(
      visible = TRUE
    ),
    type = "category"
  )
)

fig
```

## 

```{r fig.width = 16, fig.asp = 0.618}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method, year) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly()

years <- unique(agg_data_sum$year)
for (year in years) {
  year_data <- agg_data_sum[agg_data_sum$year == year,]
  fig <- fig %>% add_trace(
    data = year_data,
    x = ~sector, y = ~records_lost,
    type = 'bar', name = ~method,
    hoverinfo = 'text', 
    text = ~paste('Year:',
                  year,
                  '<br>Method:',
                  method, 
                  '<br>Records Lost:',
                  records_lost),
    visible = ifelse(year == years[1], TRUE, FALSE))
}

fig <- fig %>% layout(
  barmode = 'stack',
  title = 'Breach Methods by Sector/Type of Data',
  xaxis = list(
    title = 'Sector/Type',
    tickangle = -45,
    automargin = TRUE,
    rangeslider = list(type = "date")  
  ),
  yaxis = list(title = 'Records Lost'),
  updatemenus = list(
    list(
      y = 0.8,
      buttons = lapply(years, function(year) {
        list(
          method = "update",
          args = list(list(visible = lapply(agg_data_sum$year,
                                            function(y) y == year)),
                      list(title = paste("Breach Methods by Sector/Type of Data - Year", year))),
          label = as.character(year)
        )
      })
    )
  ),
  showlegend = TRUE,
  legend = list(
    title = list(text = 'Method'),
    orientation = 'v',
    x = 1, 
    y = 0.5
  )
)

fig

```

#### Plot C

```{r fig.width = 16, fig.asp = 0.618}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~sector,
               y = ~records_lost,
               type = 'bar',
               name = ~method,
               hoverinfo = 'text', 
               text = ~paste('Method:',
                             method,
                             '<br>Records Lost:',
                             format(records_lost, big.mark = ","))) %>%
  layout(
    barmode = 'relative',
    title = 'Breach Severity by Sector/Type of Data',
    xaxis = list(title = 'Sector/Type',
                 tickangle = -45,
                 automargin = TRUE), 
    yaxis = list(title = 'Records Lost'),
    showlegend = TRUE
  )

fig

```

#### Plot D

```{r fig.width = 16, fig.asp = 0.618}
library(plotly)
library(dplyr)


agg_data_sum <- agg_data %>%
  group_by(year, method) %>%
  summarise(breach_count = n(), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~year,
               y = ~breach_count,
               color = ~method,
               mode = "lines", 
               line = list(smoothing = 0.6),
               hoverinfo = "text",
               text = ~paste("Year: ", 
                             year, 
                             "<br>Breach Method: ",
                             method,
                             "<br>Breach Count: ",
                             breach_count)) %>%
  layout(title = "Breach Frequency Over Time",
         xaxis = list(title = "Year"),
         yaxis = list(title = "Breach Count"),
         showlegend = TRUE) %>%
  animation_opts(frame = 100, redraw =  TRUE)

fig
```

## Conclusion

::: incremental
-  Identifying Sector Weaknesses: We pinpointed industries most vulnerable to cyberattacks, like healthcare and finance. These sectors require immediate security upgrades.

-  Prioritizing Breach Severity: We distinguished between minor leaks and data floods. Focusing on breaches with the most sensitive or critical data is crucial.

-  Balancing Security & Privacy: We explored the delicate balance between robust security and customer access. Businesses must find the sweet spot to avoid hindering operations.

-  Adapting to Evolving Threats: We visualized how hacker tactics change. Businesses need to continuously refine their defenses to stay ahead of cybercriminals.
:::
