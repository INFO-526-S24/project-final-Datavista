```{r, GETTING THE LIBRARIES}
if (!require(pacman))
  install.packages(pacman)


pacman::p_load(tidyverse,
               dplyr,
               janitor,
               here,
               plotly,
               gganimate,
               scales,
               gifski,
               ggimage,
               ggtext,magick,
               animation)

pacman::p_load_gh("BlakeRMills/MoMAColors")
  message = FALSE

```

```{r, ggplot_setup, message=FALSE, include=FALSE}
# setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14, base_family = "sans"))


```

## Plots

### **Question 1: General Assessment: How have information breaches advanced over past decade(2013-2023), and what are the patterns with respect to their recurrence, seriousness, and affect over distinctive businesses?**

```{r}

# Load required libraries
library(plotly)
library(janitor)
library(magrittr)  # Load magrittr for pipe operator

# Load the CSV data
data <- read.csv("data/Data_Breaches_LATEST.csv")

# Rename the column with extra spaces
names(data)[names(data) == 'year   '] <- 'year'

# Filter data for the past decade (2013-2023)
df_decade <- data[data$year >= 2013 & data$year <= 2023, ]

# Clean column names using janitor::clean_names()
df_decade <- janitor::clean_names(df_decade)

# Aggregate data by year, sector, and method
agg_data <- aggregate(records_lost ~ year + sector + method, data = df_decade, FUN = sum)

# Create a 3D plot
plot_ly(agg_data, x = ~year, y = ~sector, z = ~records_lost, color = ~method,
        type = "scatter3d", mode = "markers", sizes = 10) %>%
  layout(title = "Information Breaches Over the Past Decade",
         scene = list(xaxis = list(title = "Year"),
                      yaxis = list(title = "Sector"),
                      zaxis = list(title = "Records Lost")))

```

```{r}
library(ggplot2)
library(dplyr)
library(gridExtra)



# Clean 'health ' to 'health'
data$sector <- gsub("health ",
                    "health",
                    data$sector)

# Function to categorize sectors
categorize_sector <- function(sector) {
  if (sector %in% c("government",
                    "government, 
                    health", 
                    "government,
                    military")) {
    return("government")
  } else if (sector %in% c("health",
                           "tech, 
                           health",
                           "misc,health",
                           "military, health")) {
    return("healthcare")
  } else if (sector %in% c("tech", 
                           "telecoms",
                           "web", 
                           "retail",
                           "web ",
                           "NGO",
                           "misc", 
                           "legal",
                           "app",
                           "tech, app",
                           "academic",
                           "tech, web", 
                            "web, tech", 
                           "tech, retail", 
                           "web, military",
                           "military", 
                            "web, gaming")) {
    return("technology")
  } else {
    return("other")
  }
}

# Apply categorize_sector function to create a new column 'sector_group'
data$sector_group <- sapply(data$sector,
                            categorize_sector)

# Aggregate total breaches by year
total_by_year <- data %>%
  group_by(year) %>%
  summarise(total_breaches = n())

# Aggregate total breaches by sector group
total_by_sector_group <- data %>%
  group_by(year, 
           sector_group) %>%
  summarise(total_breaches = n())

# Plot total breaches over the years
total_plot <- ggplot(total_by_year,
                     aes(x = year,
                         y = total_breaches)) +
  geom_line(color = "black") +
  labs(x = "Year",
       y = "Total Breaches",
       title = "Total Breaches Over Time") +
  theme_minimal()

# Plot breaches by sector group
sector_group_plot <- ggplot(total_by_sector_group,
                            aes(x = year, 
                                y = total_breaches,
                                color = sector_group)) +
  geom_line() +
  labs(x = "Year",
       y = "Total Breaches", 
       title = "Breaches Over Time by Sector Group") +
  theme_minimal() +
  facet_wrap(~ sector_group,
             scales = "free_y")

# Combine plots
grid.arrange(total_plot, 
             sector_group_plot,
             ncol = 1, 
             heights = c(2, 3))


```

### **Question 2 : Vulnerability Assessment:**

### **Which sectors or types of data (e.g., personal, financial) are particularly susceptible to different breach methods like hacking or insider jobs, and what are the consequential impacts on both businesses and individuals?**

```{r}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~sector, 
               y = ~records_lost,
               type = 'bar',
               name = ~method,
               hoverinfo = 'text',
               text = ~paste('Method:',
                             method,
                             '<br>Records Lost:',
                             records_lost)) %>%
  layout(
    barmode = 'stack',
    title = 'Breach Methods by Sector/Type of Data',
    xaxis = list(title = 'Sector/Type'),
    yaxis = list(title = 'Records Lost'),
    margin = list(b = 150),
    showlegend = TRUE
  ) %>%
  config(displayModeBar = TRUE)

fig <- fig %>% layout(
  barmode = 'stack',
  paper_bgcolor = 'rgba(245, 246, 249, 1)', 
  plot_bgcolor = 'rgba(245, 246, 249, 1)',
  yaxis = list(
    automargin = TRUE,
    tickfont = list(size = 10),
    titlefont = list(size = 15)
  ),
  xaxis = list(
    automargin = TRUE,
    tickangle = -45, 
    tickfont = list(size = 10),
    titlefont = list(size = 15)
  )
)

fig <- fig %>% layout(
  xaxis = list(
    rangeslider = list(
      visible = TRUE
    ),
    type = "category"
  )
)

fig

```

```{r}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method, year) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly()

years <- unique(agg_data_sum$year)
for (year in years) {
  year_data <- agg_data_sum[agg_data_sum$year == year,]
  fig <- fig %>% add_trace(
    data = year_data,
    x = ~sector, y = ~records_lost,
    type = 'bar', name = ~method,
    hoverinfo = 'text', 
    text = ~paste('Year:',
                  year,
                  '<br>Method:',
                  method, 
                  '<br>Records Lost:',
                  records_lost),
    visible = ifelse(year == years[1], TRUE, FALSE))
}

fig <- fig %>% layout(
  barmode = 'stack',
  title = 'Breach Methods by Sector/Type of Data',
  xaxis = list(
    title = 'Sector/Type',
    tickangle = -45,
    automargin = TRUE,
    rangeslider = list(type = "date")  
  ),
  yaxis = list(title = 'Records Lost'),
  updatemenus = list(
    list(
      y = 0.8,
      buttons = lapply(years, function(year) {
        list(
          method = "update",
          args = list(list(visible = lapply(agg_data_sum$year,
                                            function(y) y == year)),
                      list(title = paste("Breach Methods by Sector/Type of Data - Year", year))),
          label = as.character(year)
        )
      })
    )
  ),
  showlegend = TRUE,
  legend = list(
    title = list(text = 'Method'),
    orientation = 'v',
    x = 1, 
    y = 0.5
  )
)

fig


```

```{r}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~sector,
               y = ~records_lost,
               type = 'bar',
               name = ~method,
               hoverinfo = 'text', 
               text = ~paste('Method:',
                             method,
                             '<br>Records Lost:',
                             format(records_lost, big.mark = ","))) %>%
  layout(
    barmode = 'relative',
    title = 'Breach Severity by Sector/Type of Data',
    xaxis = list(title = 'Sector/Type',
                 tickangle = -45,
                 automargin = TRUE), 
    yaxis = list(title = 'Records Lost'),
    showlegend = TRUE
  )

fig

```

```{r}
library(plotly)
library(dplyr)

agg_data_sum <- agg_data %>%
  group_by(sector, method) %>%
  summarise(records_lost = sum(records_lost), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~sector,
               y = ~records_lost,
               type = 'bar', 
               name = ~method,
               hoverinfo = 'text',
               text = ~paste('Sector:',
                             sector,
                             '<br>Method:',
                             method, 
                             '<br>Records Lost:',
                             records_lost)) %>%
  layout(
    barmode = 'stack',
    title = 'Records Lost by Sector/Method',
    xaxis = list(title = 'Sector',
                 tickangle = -45,
                 automargin = TRUE),
    yaxis = list(title = 'Records Lost'),
    showlegend = TRUE
  )

fig

```

```{r}
library(plotly)
library(dplyr)


agg_data_sum <- agg_data %>%
  group_by(year, method) %>%
  summarise(breach_count = n(), .groups = 'drop')

fig <- plot_ly(data = agg_data_sum,
               x = ~year,
               y = ~breach_count,
               color = ~method,
               mode = "lines", 
               line = list(smoothing = 0.6),
               hoverinfo = "text",
               text = ~paste("Year: ", 
                             year, 
                             "<br>Breach Method: ",
                             method,
                             "<br>Breach Count: ",
                             breach_count)) %>%
  layout(title = "Breach Frequency Over Time",
         xaxis = list(title = "Year"),
         yaxis = list(title = "Breach Count"),
         showlegend = TRUE) %>%
  animation_opts(frame = 100, redraw =  TRUE)

fig

```
